/*
 * @lc app=leetcode.cn id=13 lang=cpp
 *
 * [13] 罗马数字转整数
 */

// @lc code=start
class Solution
{
public:
    // 主函数：将罗马数字字符串 s 转换为整数
    int romanToInt(string s)
    {
        int add = 0; // 用于存储最终结果

        // 从右到左遍历字符串 s
        for (int i = s.size() - 1; i >= 0; i--)
        {
            // 遇到字符 'I'，加上 1
            if (s[i] == 'I')
            {
                add += 1;
            }

            // 遇到字符 'V'，加上 5，如果前面有 'I'，说明是减法情况，减去 1
            if (s[i] == 'V')
            {
                add += 5;
                if (i > 0 && s[i - 1] == 'I')
                {
                    add -= 1;
                    i--; // 跳过下一个字符，因为已经处理过了
                }
            }

            // 遇到字符 'X'，加上 10，如果前面有 'I'，说明是减法情况，减去 1
            if (s[i] == 'X')
            {
                add += 10;
                if (i > 0 && s[i - 1] == 'I')
                {
                    add -= 1;
                    i--; // 跳过下一个字符，因为已经处理过了
                }
            }

            // 遇到字符 'L'，加上 50，如果前面有 'X'，说明是减法情况，减去 10
            if (s[i] == 'L')
            {
                add += 50;
                if (i > 0 && s[i - 1] == 'X')
                {
                    add -= 10;
                    i--; // 跳过下一个字符，因为已经处理过了
                }
            }

            // 遇到字符 'C'，加上 100，如果前面有 'X'，说明是减法情况，减去 10
            if (s[i] == 'C')
            {
                add += 100;
                if (i > 0 && s[i - 1] == 'X')
                {
                    add -= 10;
                    i--; // 跳过下一个字符，因为已经处理过了
                }
            }

            // 遇到字符 'D'，加上 500，如果前面有 'C'，说明是减法情况，减去 100
            if (s[i] == 'D')
            {
                add += 500;
                if (i > 0 && s[i - 1] == 'C')
                {
                    add -= 100;
                    i--; // 跳过下一个字符，因为已经处理过了
                }
            }

            // 遇到字符 'M'，加上 1000，如果前面有 'C'，说明是减法情况，减去 100
            if (s[i] == 'M')
            {
                add += 1000;
                if (i > 0 && s[i - 1] == 'C')
                {
                    add -= 100;
                    i--; // 跳过下一个字符，因为已经处理过了
                }
            }
        }

        return add; // 返回转换后的整数
    }
};
// @lc code=end
